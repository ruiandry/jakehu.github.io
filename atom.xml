<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>晨曦&#39;s Blog</title>
  
  <subtitle>This is a window to the soul</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jakehu.me/"/>
  <updated>2018-12-05T01:50:12.921Z</updated>
  <id>http://www.jakehu.me/</id>
  
  <author>
    <name>jakehu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CleanMyMac资源之备忘录</title>
    <link href="http://www.jakehu.me/2018/cleanmymac/"/>
    <id>http://www.jakehu.me/2018/cleanmymac/</id>
    <published>2018-12-05T01:22:00.000Z</published>
    <updated>2018-12-05T01:50:12.921Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><code>CleanMyMac X</code>是一款强大的<code>Mac</code>系统垃圾清理工具，可以清除Mac系统多余的语言包、系统缓存、应用程序、<code>PowerPc</code>软件运行库等，是硬盘瘦身的好工具</p><h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h3><p><a href="https://macpaw.com/" target="_blank" rel="noopener">国际版官网</a></p><p><a href="http://www.mycleanmymac.com/" target="_blank" rel="noopener">中文官网</a></p><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p>因为<code>CleanMyMac</code>对不同的版本有不同的授权信息。</p><p>下面地址均为官网下载地址<code>https://dl.devmate.com</code>开头。</p><p><a href="https://dl.devmate.com/com.macpaw.CleanMyMac3/CleanMyMac3.dmg" target="_blank" rel="noopener">国际版 CleanMyMac 3</a></p><p><a href="https://dl.devmate.com/com.macpaw.CleanMyMac4/CleanMyMacX.dmg" target="_blank" rel="noopener">国际版  CleanMyMac X</a></p><p><a href="https://dl.devmate.com/com.macpaw.zh.CleanMyMac3/CleanMyMacChinese.dmg" target="_blank" rel="noopener">中文版 CleanMyMac 3</a></p><p><a href="https://dl.devmate.com/com.macpaw.zh.CleanMyMac4/CleanMyMacXChinese.dmg" target="_blank" rel="noopener">中文版 CleanMyMac X</a></p><h3 id="MacPaw支持"><a href="#MacPaw支持" class="headerlink" title="MacPaw支持"></a>MacPaw支持</h3><p>可在支持中心查询许可证；或者当换机不成功时可以通过支持中心进行许可证重置</p><p><a href="https://macpaw.com/zh/support" target="_blank" rel="noopener">支持中心</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;&lt;code&gt;CleanMyMac X&lt;/code&gt;是一款强大的&lt;code&gt;Mac&lt;/code&gt;系统垃圾清理工具，可以清除Mac系统多余的语言
      
    
    </summary>
    
    
      <category term="cleanmymac" scheme="http://www.jakehu.me/tags/cleanmymac/"/>
    
  </entry>
  
  <entry>
    <title>利用gulp对Hexo博客压缩并一键之部署</title>
    <link href="http://www.jakehu.me/2018/hexo-gulp/"/>
    <id>http://www.jakehu.me/2018/hexo-gulp/</id>
    <published>2018-12-04T02:43:45.000Z</published>
    <updated>2018-12-05T01:48:41.337Z</updated>
    
    <content type="html"><![CDATA[<h3 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h3><p>压缩页面无非就是减小页面大小加快博客访问时间</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="selector-tag">i</span> gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify -s</span><br></pre></td></tr></table></figure><h4 id="gulp配置"><a href="#gulp配置" class="headerlink" title="gulp配置"></a>gulp配置</h4><p>在根目录下创建<code>gulpfile.js</code>文件</p><p><code>gulpfile.js</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">'gulp-minify-css'</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>);</span><br><span class="line"><span class="comment">// 压缩 public 目录 css</span></span><br><span class="line">gulp.task(<span class="string">'minify-css'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.css'</span>)</span><br><span class="line">        .pipe(minifycss())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩 public 目录 html</span></span><br><span class="line">gulp.task(<span class="string">'minify-html'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: <span class="literal">true</span>,</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyURLs: <span class="literal">true</span>,</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩 public/js 目录 js</span></span><br><span class="line">gulp.task(<span class="string">'minify-js'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.js'</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 执行 gulp 命令时执行的任务</span></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [</span><br><span class="line">    <span class="string">'minify-html'</span>, <span class="string">'minify-css'</span>, <span class="string">'minify-js'</span></span><br><span class="line">]);</span><br></pre></td></tr></table></figure></p><h4 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h4><p>在<code>package.json</code>中加入如下<code>script</code><br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"push"</span>: <span class="string">"hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后在部署的时候只需要运行<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">run</span><span class="bash"> push</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;说在前面&quot;&gt;&lt;a href=&quot;#说在前面&quot; class=&quot;headerlink&quot; title=&quot;说在前面&quot;&gt;&lt;/a&gt;说在前面&lt;/h3&gt;&lt;p&gt;压缩页面无非就是减小页面大小加快博客访问时间&lt;/p&gt;
&lt;h3 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;he
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Hexo" scheme="http://www.jakehu.me/tags/Hexo/"/>
    
      <category term="gulp" scheme="http://www.jakehu.me/tags/gulp/"/>
    
  </entry>
  
  <entry>
    <title>Next之Leancloud访客统计v6.6.0配置</title>
    <link href="http://www.jakehu.me/2018/next-leancloud/"/>
    <id>http://www.jakehu.me/2018/next-leancloud/</id>
    <published>2018-12-04T02:17:21.000Z</published>
    <updated>2018-12-04T02:21:39.760Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前因"><a href="#前因" class="headerlink" title="前因"></a>前因</h3><p>版本：<code>NexT.Pisces v6.6.0</code><br>Error： <code>阅读次数：Counter not initialized! See more at console err msg.</code></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>出现上述之错误，遂查看配置文件之说明<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  app_id:</span> <span class="string">&lt;&lt;your</span> <span class="string">app</span> <span class="string">id&gt;&gt;</span></span><br><span class="line"><span class="attr">  app_key:</span> <span class="string">&lt;&lt;your</span> <span class="string">app</span> <span class="string">key&gt;&gt;</span></span><br><span class="line">  <span class="comment"># Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security</span></span><br><span class="line">  <span class="comment"># If you don't care about security in lc counter and just want to use it directly</span></span><br><span class="line">  <span class="comment"># (without hexo-leancloud-counter-security plugin), set the `security` to `false`.</span></span><br><span class="line"><span class="attr">  security:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  betterPerformance:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><p>如上述两个解决办法：</p><blockquote><p>hexo-leancloud-counter-security<br>security: false</p></blockquote><p>因为懒所以选择了第二方案。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前因&quot;&gt;&lt;a href=&quot;#前因&quot; class=&quot;headerlink&quot; title=&quot;前因&quot;&gt;&lt;/a&gt;前因&lt;/h3&gt;&lt;p&gt;版本：&lt;code&gt;NexT.Pisces v6.6.0&lt;/code&gt;&lt;br&gt;Error： &lt;code&gt;阅读次数：Counter not in
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Next" scheme="http://www.jakehu.me/tags/Next/"/>
    
      <category term="Leancloud" scheme="http://www.jakehu.me/tags/Leancloud/"/>
    
  </entry>
  
  <entry>
    <title>如何使用Time Machine将文件从Mac备份至Synology NAS</title>
    <link href="http://www.jakehu.me/2018/Nas-Time-Machine/"/>
    <id>http://www.jakehu.me/2018/Nas-Time-Machine/</id>
    <published>2018-12-04T01:31:34.000Z</published>
    <updated>2018-12-04T02:01:48.196Z</updated>
    
    <content type="html"><![CDATA[<h3 id="官宣文档"><a href="#官宣文档" class="headerlink" title="官宣文档"></a>官宣文档</h3><p>官宣文档没毛病，重点说说注意事项<br><a href="https://www.synology.com/zh-cn/knowledgebase/DSM/tutorial/Backup_Restore/How_to_back_up_files_from_Mac_to_Synology_NAS_with_Time_Machine" target="_blank" rel="noopener">文档</a></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><blockquote><p>对于 macOS Sierra 和更高版本，Time Machine 使用 SMB 代替 AFP 作为默认协议。</p></blockquote><p>Mac(Finder)：<code>smb://JakehuNas</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;官宣文档&quot;&gt;&lt;a href=&quot;#官宣文档&quot; class=&quot;headerlink&quot; title=&quot;官宣文档&quot;&gt;&lt;/a&gt;官宣文档&lt;/h3&gt;&lt;p&gt;官宣文档没毛病，重点说说注意事项&lt;br&gt;&lt;a href=&quot;https://www.synology.com/zh-cn/kn
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Synology" scheme="http://www.jakehu.me/tags/Synology/"/>
    
      <category term="NAS" scheme="http://www.jakehu.me/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>beanstalkd之Nodejs客户端bsw</title>
    <link href="http://www.jakehu.me/2018/beanstalkd-bsw/"/>
    <id>http://www.jakehu.me/2018/beanstalkd-bsw/</id>
    <published>2018-12-03T07:53:30.000Z</published>
    <updated>2018-12-03T08:30:26.584Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><a href="https://github.com/beanstalkd/beanstalkd" target="_blank" rel="noopener">Beanstalkd</a> - 一个高性能、轻量级的分布式内存队列系统。</p><p><a href="https://github.com/beanstalkd/beanstalkd/blob/master/doc/protocol.txt" target="_blank" rel="noopener">英文协议</a></p><p><a href="https://github.com/beanstalkd/beanstalkd/blob/master/doc/protocol.zh-CN.md" target="_blank" rel="noopener">中文协议</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>这里我们用<code>Docker</code>来运行。<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull schickling/beanstalkd</span><br><span class="line">docker <span class="keyword">run</span><span class="bash"> -d -p 11300:11300 schickling/beanstalkd</span></span><br></pre></td></tr></table></figure></p><p><code>beanstalkd</code>管理<code>WEB</code>平台，主要用来看看以后的任务详情。<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull schickling/beanstalkd-console</span><br><span class="line">docker <span class="built_in">run</span> -d -p <span class="number">2080</span>:<span class="number">2080</span> <span class="comment">--link beanstalkd:beanstalkd schickling/beanstalkd-console</span></span><br></pre></td></tr></table></figure></p><p>通过<code>127.0.0.1:2080</code>访问</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>官方客户端推荐列表<a href="https://github.com/beanstalkd/beanstalkd/wiki/Client-Libraries" target="_blank" rel="noopener">Client</a></p><p>下面我们主要介绍<code>Nodejs</code>客户端<code>bsw</code></p><h4 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="selector-tag">i</span> bsw --save</span><br></pre></td></tr></table></figure><h4 id="客户端示例"><a href="#客户端示例" class="headerlink" title="客户端示例"></a>客户端示例</h4><p>这里我们用阿里开源框架<code>eggjs</code>做测试。<br><code>app.js</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">const</span> &#123; Consumer &#125; = <span class="built_in">require</span>(<span class="string">'bsw'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  app.beforeStart(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> consumer = <span class="keyword">new</span> Consumer(&#123;</span><br><span class="line">      host: <span class="string">'localhost'</span>,</span><br><span class="line">      port: <span class="string">'11300'</span>,</span><br><span class="line">      tube: <span class="string">'node'</span>,</span><br><span class="line">      <span class="keyword">async</span> handler(payload, job_info) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'processing job: '</span>, payload);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'processing job_info: '</span>, job_info);</span><br><span class="line">        <span class="comment">// 这里进行业务操作</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'success'</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    consumer.on(<span class="string">'error'</span>, e =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(e);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'beanstalkd启动了'</span>);</span><br><span class="line">    <span class="keyword">await</span> consumer.start();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p><code>home.js</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">const</span> Controller = <span class="built_in">require</span>(<span class="string">'egg'</span>).Controller;</span><br><span class="line"><span class="keyword">const</span> &#123; Producer &#125; = <span class="built_in">require</span>(<span class="string">'bsw'</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HomeController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">  <span class="keyword">async</span> index() &#123;</span><br><span class="line">    <span class="keyword">const</span> producer = <span class="keyword">new</span> Producer(&#123;</span><br><span class="line">      host: <span class="string">'localhost'</span>,</span><br><span class="line">      port: <span class="string">'11300'</span>,</span><br><span class="line">      tube: <span class="string">'node'</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">await</span> producer.start();</span><br><span class="line">    <span class="keyword">await</span> producer.putJob(&#123;</span><br><span class="line">      payload: <span class="built_in">JSON</span>.stringify(&#123; <span class="attr">throw</span>: <span class="literal">true</span>, <span class="attr">result</span>: <span class="string">'success'</span> &#125;),</span><br><span class="line">      priority: <span class="number">0</span>, <span class="comment">// 优先级</span></span><br><span class="line">      delay: <span class="number">30</span>, <span class="comment">// 延时单位(s)</span></span><br><span class="line">      ttr: <span class="number">60</span>, <span class="comment">// 允许worker执行的最大秒数</span></span><br><span class="line">    &#125;);</span><br><span class="line">    producer.stop();</span><br><span class="line">    <span class="keyword">this</span>.ctx.body = <span class="string">'hi, egg'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = HomeController;</span><br></pre></td></tr></table></figure></p><hr><p>天若有情天亦老，月如无恨月长圆</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/beanstalkd/beanstalkd&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="beanstalkd" scheme="http://www.jakehu.me/tags/beanstalkd/"/>
    
      <category term="Nodejs" scheme="http://www.jakehu.me/tags/Nodejs/"/>
    
      <category term="eggjs" scheme="http://www.jakehu.me/tags/eggjs/"/>
    
  </entry>
  
  <entry>
    <title>Java楞个多优秀的工具类，嗯嗯，快记下来</title>
    <link href="http://www.jakehu.me/2018/Java-Utils/"/>
    <id>http://www.jakehu.me/2018/Java-Utils/</id>
    <published>2018-11-30T02:28:01.000Z</published>
    <updated>2018-12-03T09:31:17.522Z</updated>
    
    <content type="html"><![CDATA[<h3 id="commons-lang3"><a href="#commons-lang3" class="headerlink" title="commons-lang3"></a>commons-lang3</h3><blockquote><p>概述</p></blockquote><p><code>Apache Commons-Lang3</code>库提供了<code>Java</code>的<code>API</code>的核心类的操作支持。此支持包括处理字符串，数字，日期，并发，对象反射等的方法。</p><blockquote><p>Maven依赖</p></blockquote><p>要使用<code>commons-lang3</code>库，只需使用以下依赖项从中央Maven存储库中提取它<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><blockquote><p>示例、文档参考</p></blockquote><p>文档参考：<a href="https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html" target="_blank" rel="noopener">StringUtils</a></p><h3 id="Hutool"><a href="#Hutool" class="headerlink" title="Hutool"></a>Hutool</h3><blockquote><p>概述</p></blockquote><p><code>Hutool</code>是一个<code>Java</code>工具包，也只是一个工具包，它帮助我们简化每一行代码，减少每一个方法，让<code>Java</code>语言也可以“甜甜的”。</p><blockquote><p>Maven依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>示例、文档参考</p></blockquote><p>文档参考：<a href="https://hutool.cn/docs/#/" target="_blank" rel="noopener">Hutool</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;commons-lang3&quot;&gt;&lt;a href=&quot;#commons-lang3&quot; class=&quot;headerlink&quot; title=&quot;commons-lang3&quot;&gt;&lt;/a&gt;commons-lang3&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;概述&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Java" scheme="http://www.jakehu.me/tags/Java/"/>
    
      <category term="StringUtils" scheme="http://www.jakehu.me/tags/StringUtils/"/>
    
  </entry>
  
  <entry>
    <title>Docker之常用命令集</title>
    <link href="http://www.jakehu.me/2018/docker-command/"/>
    <id>http://www.jakehu.me/2018/docker-command/</id>
    <published>2018-11-28T08:34:24.000Z</published>
    <updated>2018-12-03T02:14:35.670Z</updated>
    
    <content type="html"><![CDATA[<h4 id="查看docker磁盘使用情况"><a href="#查看docker磁盘使用情况" class="headerlink" title="查看docker磁盘使用情况"></a>查看docker磁盘使用情况</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="built_in"> system </span>df</span><br></pre></td></tr></table></figure><h4 id="kill掉所有容器"><a href="#kill掉所有容器" class="headerlink" title="kill掉所有容器"></a>kill掉所有容器</h4><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker kill $<span class="comment">(docker ps -a -q)</span></span><br></pre></td></tr></table></figure><h4 id="删除所有停止容器"><a href="#删除所有停止容器" class="headerlink" title="删除所有停止容器"></a>删除所有停止容器</h4><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $<span class="comment">(docker ps -a -q)</span></span><br></pre></td></tr></table></figure><h4 id="删除所有镜像"><a href="#删除所有镜像" class="headerlink" title="删除所有镜像"></a>删除所有镜像</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi <span class="variable">$(</span>docker images -q)</span><br></pre></td></tr></table></figure><h4 id="强制删除镜像"><a href="#强制删除镜像" class="headerlink" title="强制删除镜像"></a>强制删除镜像</h4><blockquote><p>当同一镜像被多个储存库引用时，就需要强制删除镜像</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> rmi -f 镜像ID</span><br></pre></td></tr></table></figure><h4 id="删除tag为-lt-none-gt-的所有镜像"><a href="#删除tag为-lt-none-gt-的所有镜像" class="headerlink" title="删除tag为&lt;none&gt;的所有镜像"></a>删除tag为<code>&lt;none&gt;</code>的所有镜像</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> images|grep <span class="literal">none</span>|awk <span class="string">'&#123;print <span class="variable">$3</span>&#125;'</span>|xargs docker rmi</span><br><span class="line"></span><br><span class="line">docker rmi $(docker images -f <span class="string">"dangling=true"</span> -q)</span><br></pre></td></tr></table></figure><h4 id="删除已经PUSH带有DIGEST参数镜像"><a href="#删除已经PUSH带有DIGEST参数镜像" class="headerlink" title="删除已经PUSH带有DIGEST参数镜像"></a>删除已经PUSH带有DIGEST参数镜像</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>docker images --digests</span><br><span class="line">REPOSITORY                     TAG       DIGEST                                                                    IMAGE ID        CREATED         SIZE</span><br><span class="line"><span class="symbol">localhost:</span><span class="number">5000</span>/nodeservice    &lt;none&gt;    <span class="symbol">sha256:</span>cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf   <span class="number">4986</span>bf8c1536    <span class="number">9</span> weeks ago     <span class="number">2.43</span> MB</span><br><span class="line"></span><br><span class="line"><span class="variable">$ </span>docker rmi <span class="symbol">localhost:</span><span class="number">5000</span>/nodeservice<span class="variable">@sha256</span><span class="symbol">:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf</span></span><br></pre></td></tr></table></figure><hr><font color="red"><br>参考：<a href="https://docs.docker.com/engine/reference/commandline/cli/" target="_blank" rel="noopener">Docker命令</a><br></font>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;查看docker磁盘使用情况&quot;&gt;&lt;a href=&quot;#查看docker磁盘使用情况&quot; class=&quot;headerlink&quot; title=&quot;查看docker磁盘使用情况&quot;&gt;&lt;/a&gt;查看docker磁盘使用情况&lt;/h4&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Docker" scheme="http://www.jakehu.me/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker之时区配置</title>
    <link href="http://www.jakehu.me/2018/docker-time-zone/"/>
    <id>http://www.jakehu.me/2018/docker-time-zone/</id>
    <published>2018-11-27T06:17:45.000Z</published>
    <updated>2018-11-29T01:33:17.044Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h4><p>公司部分业务使用的是阿里的<code>docker swarm</code>服务，在配置<code>nodejs</code>应用时发现时区不对。</p><h4 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h4><p>记录下自己所选择的方式。</p><p>我选择在<code>Dockerfile</code>文件中做处理，这样利于以后所有引用此镜像的容器时区的正确性。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"Asia/Shanghai"</span> &gt; /etc/timezone \</span></span><br><span class="line"><span class="bash">    &amp;&amp; dpkg-reconfigure -f noninteractive tzdata</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;前记&quot;&gt;&lt;a href=&quot;#前记&quot; class=&quot;headerlink&quot; title=&quot;前记&quot;&gt;&lt;/a&gt;前记&lt;/h4&gt;&lt;p&gt;公司部分业务使用的是阿里的&lt;code&gt;docker swarm&lt;/code&gt;服务，在配置&lt;code&gt;nodejs&lt;/code&gt;应用时发现时区
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Docker" scheme="http://www.jakehu.me/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>这些个Kubernetes集群管理平台你值得拥有</title>
    <link href="http://www.jakehu.me/2018/k8s-ui/"/>
    <id>http://www.jakehu.me/2018/k8s-ui/</id>
    <published>2018-11-26T07:06:08.000Z</published>
    <updated>2018-11-26T07:30:01.587Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger"><p>我们不生产<code>k8s</code>管理平台，我们只是开源项目的搬运工</p></div><h4 id="Rancher"><a href="#Rancher" class="headerlink" title="Rancher"></a>Rancher</h4><p><a href="https://rancher.com/" target="_blank" rel="noopener">Rancher</a>是一个开源的企业级容器管理平台。通过Rancher，企业再也不必自己使用一系列的开源软件去从头搭建容器服务平台。Rancher提供了在生产环境中使用的管理Docker和Kubernetes的全栈化容器部署与管理平台。</p><h4 id="Kubernetes-Dashboard"><a href="#Kubernetes-Dashboard" class="headerlink" title="Kubernetes Dashboard"></a>Kubernetes Dashboard</h4><p><a href="https://github.com/kubernetes/dashboard" target="_blank" rel="noopener">Kubernetes Dashboard</a>是Kubernetes集群的基于Web的通用UI。它允许用户管理在群集中运行的应用程序并对其进行故障排除，以及管理群集本身。</p><h4 id="Wayne"><a href="#Wayne" class="headerlink" title="Wayne"></a>Wayne</h4><p><a href="https://github.com/Qihoo360/wayne" target="_blank" rel="noopener">Wayne</a>是一个通用的、基于 Web 的 Kubernetes 多集群管理平台。通过可视化 Kubernetes 对象模板编辑的方式，降低业务接入成本， 拥有完整的权限管理系统，适应多租户场景，是一款适合企业级集群使用的发布平台。</p><h4 id="Naftis"><a href="#Naftis" class="headerlink" title="Naftis"></a>Naftis</h4><p><a href="https://github.com/XiaoMi/naftis" target="_blank" rel="noopener">Naftis</a>是一个基于 web 的 Istio dashboard，通过任务模板的方式来帮助用户更方便地执行 Istio 任务。 用户可以在 Naftis 中定义自己的任务模板，并填充变量来构造单个或多个构造任务实例，从而完成各种服务治理功能。</p><h4 id="Breeze"><a href="#Breeze" class="headerlink" title="Breeze"></a>Breeze</h4><p><a href="https://github.com/wise2c-devops/breeze" target="_blank" rel="noopener">Breeze</a>是睿云智合提供的图形化Kubernetes部署工具。</p><h4 id="Nacos"><a href="#Nacos" class="headerlink" title="Nacos"></a>Nacos</h4><p><a href="https://nacos.io/zh-cn/" target="_blank" rel="noopener">Nacos</a>是阿里巴巴的新开源项目，其核心定位是 “一个更易于帮助构建云原生应用的动态服务发现、配置和服务管理平台”。</p><p><code>Nacos</code>可能更多的是为了支持一整套微服务。包括<code>Dubbo</code>，<code>Spring Cloud</code>以及<code>Kubernetes</code>等。</p><hr><p>最后相对来说，我还是比较喜欢用<code>Rancher</code>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note danger&quot;&gt;&lt;p&gt;我们不生产&lt;code&gt;k8s&lt;/code&gt;管理平台，我们只是开源项目的搬运工&lt;/p&gt;&lt;/div&gt;
&lt;h4 id=&quot;Rancher&quot;&gt;&lt;a href=&quot;#Rancher&quot; class=&quot;headerlink&quot; title=&quot;R
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="k8s" scheme="http://www.jakehu.me/tags/k8s/"/>
    
      <category term="kubernetes" scheme="http://www.jakehu.me/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis-Plus注解方式自定义分页实现</title>
    <link href="http://www.jakehu.me/2018/mybatis-plus-page/"/>
    <id>http://www.jakehu.me/2018/mybatis-plus-page/</id>
    <published>2018-11-26T06:23:09.000Z</published>
    <updated>2018-11-26T06:38:07.203Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h3><p>毫无疑问，<code>Mybatis-Plus</code>是优秀的。<br>在<code>Mybatis-Plus</code>官网的文档中，自定义分页只能只支持<code>xml</code>方式，但是鉴于本人对<code>xml</code>并不是太喜欢，而是喜欢用注解的方式。</p><p>于是，记录了在<code>Mybatis-Plus</code>中注解分页方式实现。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>首先讲一下我的请求：<br><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">controller</span>-&gt;</span><span class="function"><span class="title">service</span>-&gt;</span><span class="function"><span class="title">mapper</span>-&gt;</span>entity</span><br></pre></td></tr></table></figure></p><p><code>UserService.java</code><br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public <span class="built_in">Object</span> getAll() &#123;</span><br><span class="line">    Page userList = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; param = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    param.put(<span class="string">"name"</span>, <span class="string">"测试788"</span>);</span><br><span class="line">    param.put(<span class="string">"page"</span>, userList);</span><br><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;&gt; userListArr = mapper.getAllUserGoodsSQLPage(param);</span><br><span class="line">    userList.setRecords(userListArr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>UserMapper.java</code><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">Select</span>(<span class="string">"&lt;script&gt;SELECT u.id,u.name from "</span> + <span class="keyword">TABLE</span> + <span class="string">" as u "</span> +</span><br><span class="line">        <span class="string">"left join "</span> + G_TABLE + <span class="string">" as g "</span> +</span><br><span class="line">        <span class="string">"on u.id = g.uid "</span> +</span><br><span class="line">        <span class="string">"where u.name =  #&#123;name&#125;"</span> +</span><br><span class="line">        <span class="string">"&lt;if test = 'id != null'&gt;"</span> +</span><br><span class="line">        <span class="string">"   and u.id = #&#123;id&#125;"</span> +</span><br><span class="line">        <span class="string">"&lt;/if&gt;"</span> +</span><br><span class="line">        <span class="string">"&lt;/script&gt;"</span>)</span><br><span class="line"><span class="keyword">List</span>&lt;<span class="keyword">Map</span>&lt;<span class="keyword">String</span>, <span class="keyword">Object</span>&gt;&gt; getAllUserGoodsSQLPage(<span class="keyword">Map</span>&lt;<span class="keyword">String</span>, <span class="keyword">Object</span>&gt; param);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前记&quot;&gt;&lt;a href=&quot;#前记&quot; class=&quot;headerlink&quot; title=&quot;前记&quot;&gt;&lt;/a&gt;前记&lt;/h3&gt;&lt;p&gt;毫无疑问，&lt;code&gt;Mybatis-Plus&lt;/code&gt;是优秀的。&lt;br&gt;在&lt;code&gt;Mybatis-Plus&lt;/code&gt;官网的文档
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Mysql" scheme="http://www.jakehu.me/tags/Mysql/"/>
    
      <category term="Mybatis" scheme="http://www.jakehu.me/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>记Mysql部分用法</title>
    <link href="http://www.jakehu.me/2018/mysql-usage/"/>
    <id>http://www.jakehu.me/2018/mysql-usage/</id>
    <published>2018-11-24T05:55:30.000Z</published>
    <updated>2018-11-26T07:37:18.881Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><p>1、查询数组中对象</p><blockquote><p><code>JSON_CONTAINS</code> 用法</p></blockquote><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * <span class="keyword">from</span> circulation</span><br><span class="line"><span class="keyword">where</span> JSON_CONTAINS(goods-&gt;<span class="string">'$[*].name'</span>, <span class="string">'["海带结（香辣味）150克/袋"]'</span>, <span class="string">'$'</span>)</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> circulation</span><br><span class="line"><span class="keyword">where</span> JSON_CONTAINS(goods-&gt;<span class="string">'$[*].gid'</span>, <span class="string">'[20]'</span>, <span class="string">'$'</span>)</span><br></pre></td></tr></table></figure><p>2、Json字符串转化为Json对象</p><blockquote><p><code>CONVERT</code> 用法</p></blockquote><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> CONVERT(<span class="string">'&#123;"</span>mail<span class="string">": "</span>amy@gmail.com<span class="string">", "</span>name<span class="string">": "</span>Amy<span class="string">"&#125;'</span>,JSON)</span><br></pre></td></tr></table></figure><p>3、元素转化为数组</p><blockquote><p><code>JSON_ARRAY</code> 用法</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JSON_ARRAY(<span class="number">1</span>, <span class="string">"abc"</span>, <span class="literal">NULL</span>, <span class="literal">TRUE</span>, <span class="keyword">CURTIME</span>())</span><br></pre></td></tr></table></figure><h3 id="常规"><a href="#常规" class="headerlink" title="常规"></a>常规</h3><p>1、查询重复记录<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> merchant</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">num</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">num</span> <span class="keyword">from</span> synk.merchant <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">num</span> <span class="keyword">having</span> <span class="keyword">count</span>(<span class="keyword">num</span>) &gt; <span class="number">1</span>)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JSON&quot;&gt;&lt;a href=&quot;#JSON&quot; class=&quot;headerlink&quot; title=&quot;JSON&quot;&gt;&lt;/a&gt;JSON&lt;/h3&gt;&lt;p&gt;1、查询数组中对象&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;JSON_CONTAINS&lt;/code&gt; 用法&lt;/p
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Mysql" scheme="http://www.jakehu.me/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>记Gitlab到Docker全过程CI/CD</title>
    <link href="http://www.jakehu.me/2018/gitlab-docker/"/>
    <id>http://www.jakehu.me/2018/gitlab-docker/</id>
    <published>2018-11-22T16:00:00.000Z</published>
    <updated>2018-11-26T07:37:10.073Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h3><p>很久都没有写博客了，不是没时间，可能就是纯粹的懒吧。</p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>公司内部版本管理一直以来都是用的<code>Gitlab</code>，而系统早在前年的时候就已经全部上了<code>Docker</code>，<code>gitlab-runner</code>发布过后就一直想利用<code>gitlab-runner</code>进行<code>CI/CD</code>自动化的部署。</p><h3 id="Gitlab-amp-amp-Gitlab-Runner"><a href="#Gitlab-amp-amp-Gitlab-Runner" class="headerlink" title="Gitlab &amp;&amp; Gitlab-Runner"></a>Gitlab &amp;&amp; Gitlab-Runner</h3><h4 id="基于原生原方案"><a href="#基于原生原方案" class="headerlink" title="基于原生原方案"></a>基于原生原方案</h4><p>关于<code>gitlab &amp;&amp; gitlab-runner</code>的安装我这边就不赘述了，不会的可以看官方的文档。</p><p><a href="https://docs.gitlab.com.cn/" target="_blank" rel="noopener">Gitlab</a></p><p><a href="https://docs.gitlab.com.cn/runner/" target="_blank" rel="noopener">Runner的安装和注册</a></p><p>我们在物理机或云上部署的时候一个流程图如下：</p><p><img src="/uploads/2018/gitlab-docker/runner.png"></p><p>从上图我们可以看出，当我们的服务器多了之后每个服务器都需要安装<code>runner</code>服务，这对于我这样懒的人感觉好麻烦的；受不了。</p><p>当然也有可以解决的方案，如：单独用一服务器挂载共享磁盘。</p><h4 id="基于Docker新方案"><a href="#基于Docker新方案" class="headerlink" title="基于Docker新方案"></a>基于Docker新方案</h4><p>今天我们重点来谈谈，<code>gitlab</code>如何和<code>docker</code>完美结合</p><p>先看看看架构图，如下：</p><p><img src="/uploads/2018/gitlab-docker/docker.png"></p><p>接下来我们来说明一哈上面这张图的一个工作流程。</p><blockquote><p>1、开发人员通过本地<code>push</code>代码到<code>gitlab</code>上<br>2、<code>gitlab-runner</code>会根据代码根目录下的<code>gitlab-ci.yml</code>文件执行<code>CI</code>，<code>gitlab-ci.yml</code>使用说明请移步：<a href="https://docs.gitlab.com/ce/ci/yaml/README.html" target="_blank" rel="noopener">gitlab-ci使用说明</a>。<br>3、在<code>CI</code>过程中会去读取你在代码下<code>Dockerfile</code>文件构建镜像。<code>docker</code>的使用我们这里不做过多赘述<br>4、将镜像推送到镜像仓库，可以自建，也可以用像阿里云的仓库<br>5、<code>docker</code>拉去镜像对服务进行部署。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前记&quot;&gt;&lt;a href=&quot;#前记&quot; class=&quot;headerlink&quot; title=&quot;前记&quot;&gt;&lt;/a&gt;前记&lt;/h3&gt;&lt;p&gt;很久都没有写博客了，不是没时间，可能就是纯粹的懒吧。&lt;/p&gt;
&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;header
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Docker" scheme="http://www.jakehu.me/tags/Docker/"/>
    
      <category term="Gitlab" scheme="http://www.jakehu.me/tags/Gitlab/"/>
    
  </entry>
  
  <entry>
    <title>《诗经·国风·陈风·宛丘》</title>
    <link href="http://www.jakehu.me/2016/Shijing-Wanqiu/"/>
    <id>http://www.jakehu.me/2016/Shijing-Wanqiu/</id>
    <published>2016-05-26T03:40:38.000Z</published>
    <updated>2018-11-26T06:38:26.874Z</updated>
    
    <content type="html"><![CDATA[<p>你飘飘荡荡，轻歌曼舞在宛丘之上，是多么令人神往啊。我想着你爱着你，确实有着深深的感情啊，可是只是一厢情愿而没有什么希望啊!</p><p>冬冬冬冬，鼓声响了，那是你在宛丘之下唱歌跳舞。你手持鹭毛伞一年到头歌舞不停，不管是寒冷的冬天还是炎热的盛夏。</p><p>乒乒乓乓，瓦盆响了，那是你在宛丘道上跳舞歌唱。你手持鹭毛伞一年到头歌舞不停，不管是寒冷的冬天还是炎热的盛夏。<br><img src="/uploads/2016/Shijing-Wanqiu/ZGAHXN0ABPkYXwZHNw36.jpeg"><br>子之汤兮，宛丘之上兮。洵有情兮，而无望兮。<br>坎其击鼓，宛丘之下。无冬无夏，值其鹭羽。<br>坎其击缶，宛丘之道。无冬无夏，值其鹭翿。</p><hr><p>既见君子，云胡不喜</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;你飘飘荡荡，轻歌曼舞在宛丘之上，是多么令人神往啊。我想着你爱着你，确实有着深深的感情啊，可是只是一厢情愿而没有什么希望啊!&lt;/p&gt;
&lt;p&gt;冬冬冬冬，鼓声响了，那是你在宛丘之下唱歌跳舞。你手持鹭毛伞一年到头歌舞不停，不管是寒冷的冬天还是炎热的盛夏。&lt;/p&gt;
&lt;p&gt;乒乒乓乓，瓦
      
    
    </summary>
    
      <category term="在水一方" scheme="http://www.jakehu.me/categories/%E5%9C%A8%E6%B0%B4%E4%B8%80%E6%96%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu下必不可少的编程字体Consolas</title>
    <link href="http://www.jakehu.me/2015/Ubuntu-Consolas/"/>
    <id>http://www.jakehu.me/2015/Ubuntu-Consolas/</id>
    <published>2015-12-28T02:30:18.000Z</published>
    <updated>2015-12-31T08:06:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>Consolas是一套等宽的字体，属无衬线字体，由Lucas de Groot设计。这个字体使用了微软的ClearType 字型平滑技术，并随同Windows Vista、Office 2007及Microsoft Visual Studio中发行，或可在微软的网站下载。</p><p>不说了上面的都是废话，哈哈。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="https://code.google.com/p/uigroupcode/downloads/list" target="_blank" rel="noopener">YaHei.Consolas</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>将上面下载的字体包解压，并按如下操作：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /usr/share/fonts/consolas</span><br><span class="line">sudo cp YaHei.Consolas.1.12.ttf /usr/share/fonts/consolas/</span><br><span class="line">sudo chmod 644 /usr/share/fonts/consolas/YaHei.Consolas.1.12.ttf</span><br><span class="line"><span class="built_in">cd</span> /usr/share/fonts/consolas</span><br><span class="line">sudo mkfontscale &amp;&amp; sudo mkfontdir &amp;&amp; sudo <span class="built_in">fc</span>-cache -fv</span><br></pre></td></tr></table></figure></p><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><p>在这里再给两款编程常用的字体：(个人爱好罢了)<br>Monaco：<a href="https://github.com/cstrap/monaco-font" target="_blank" rel="noopener">https://github.com/cstrap/monaco-font</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -kL https://raw.github.com/cstrap/monaco-font/master/install-font-ubuntu.sh | bash</span><br></pre></td></tr></table></figure></p><p>Source Code Pro：<a href="https://github.com/adobe-fonts/source-code-pro" target="_blank" rel="noopener">https://github.com/adobe-fonts/source-code-pro</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /usr/share/fonts/adobe-fonts/<span class="built_in">source</span>-code-pro</span><br><span class="line">sudo git <span class="built_in">clone</span> https://github.com/adobe-fonts/<span class="built_in">source</span>-code-pro.git /usr/share/fonts/adobe-fonts/<span class="built_in">source</span>-code-pro</span><br><span class="line">sudo <span class="built_in">fc</span>-cache -f -v /usr/share/fonts/adobe-fonts/<span class="built_in">source</span>-code-pro</span><br></pre></td></tr></table></figure></p><hr><p>提笔为青春，人生正当年</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Consolas是一套等宽的字体，属无衬线字体，由Lucas de Groot设计。这个字体使用了微软的ClearType 字型平滑技术，并随同Windows Vista、Office 2007及Microsoft Visual Studio中发行，或可在微软的网站下载。&lt;
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Ubuntu" scheme="http://www.jakehu.me/tags/Ubuntu/"/>
    
      <category term="Consolas" scheme="http://www.jakehu.me/tags/Consolas/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下利用proxychains高大上的安装Dropbox</title>
    <link href="http://www.jakehu.me/2015/Ubuntu-Dropbox/"/>
    <id>http://www.jakehu.me/2015/Ubuntu-Dropbox/</id>
    <published>2015-12-26T07:36:42.000Z</published>
    <updated>2015-12-26T08:19:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>对Ubuntu的折腾也有几年了吧，但是一直都是双系统或是虚拟机，最近将windows彻底的抛弃了。<br>接下来说我们今天的主角Dropbox，一直以来都是利用Dropbox进行资料同步。转入Ubuntu也不例外，在安装的时候由于Dropbox已经被墙了所以想到了走代理。</p><h3 id="Shadowsocks"><a href="#Shadowsocks" class="headerlink" title="Shadowsocks"></a>Shadowsocks</h3><p>这里也就不多说了，<a href="https://github.com/shadowsocks/shadowsocks-qt5" target="_blank" rel="noopener">Shadowsocks-Qt5</a>。</p><h3 id="proxychains"><a href="#proxychains" class="headerlink" title="proxychains"></a><a href="https://github.com/rofl0r/proxychains-ng" target="_blank" rel="noopener">proxychains</a></h3><p>在使用3版本中的时候遇到了一些问题，所以我建议直接使用4版本。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/rofl0r/proxychains-ng.git</span><br><span class="line">./configure --prefix=/usr --sysconfdir=/etc</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line">sudo make install-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 socks4 127.0.0.1 9050改为socks5 127.0.0.1 1080</span></span><br><span class="line">vi /usr/<span class="built_in">local</span>/etc/proxychains.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">proxychains4 telnet google.com 80</span><br></pre></td></tr></table></figure></p><h3 id="Dropbox"><a href="#Dropbox" class="headerlink" title="Dropbox"></a>Dropbox</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 dropbox start -i</span><br></pre></td></tr></table></figure><p>Dropbox启动后就会自动下载并安装，登录过后可以通过配置选项走代理。</p><h3 id="题外话："><a href="#题外话：" class="headerlink" title="题外话："></a>题外话：</h3><p><a href="http://www.jianshu.com/p/bf05fb3a4709" target="_blank" rel="noopener">解决Ubuntu下Sublime Text 3无法输入中文</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对Ubuntu的折腾也有几年了吧，但是一直都是双系统或是虚拟机，最近将windows彻底的抛弃了。&lt;br&gt;接下来说我们今天的主角Dropbox，一直以来都是利用Dropbox进行资料同步。转入Ubuntu也不例外，在安装的时候由于Dropbox已经被墙了所以想到了走代理。&lt;
      
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Ubuntu" scheme="http://www.jakehu.me/tags/Ubuntu/"/>
    
      <category term="Dropbox" scheme="http://www.jakehu.me/tags/Dropbox/"/>
    
  </entry>
  
  <entry>
    <title>Mark在学习和使用Centos时那些常用的命令/概念</title>
    <link href="http://www.jakehu.me/2015/Centos-Command/"/>
    <id>http://www.jakehu.me/2015/Centos-Command/</id>
    <published>2015-12-07T16:00:00.000Z</published>
    <updated>2018-11-26T06:37:37.265Z</updated>
    
    <content type="html"><![CDATA[<h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>在安装minimal版系统之后Centos系统的网卡默认是没有被开启的，我们可以用下面的命令编辑网络配置:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br></pre></td></tr></table></figure></p><p>如果使用DHCP则需要按以下格式设置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=08:00:27:0F:5C:17</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">UUID=64ea57af-9329-40c4-90da-bf239cecea4f</span><br><span class="line">ONBOOT=yes</span><br><span class="line">NM_CONTROLLED=yes</span><br><span class="line">BOOTPROTO=dhcp</span><br></pre></td></tr></table></figure></p><p>如果是固定IP则需要按以下格式设置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=08:00:27:0F:5C:17</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">UUID=64ea57af-9329-40c4-90da-bf239cecea4f</span><br><span class="line">ONBOOT=yes</span><br><span class="line">NM_CONTROLLED=yes</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=192.168.0.2</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.0.1</span><br><span class="line">DNS1=61.128.128.68</span><br><span class="line">DNS2=61.128.128.69</span><br><span class="line">IPV6INIT=no</span><br></pre></td></tr></table></figure></p><p>设置完成后需要运行以下命令重启网络服务：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure></p><p>最后可以用以下命令来查看IP地址：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="重启-关机命令"><a href="#重启-关机命令" class="headerlink" title="重启/关机命令"></a>重启/关机命令</h3><p>重启命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br><span class="line">shutdown -r now <span class="comment">#立刻重启(root用户使用)</span></span><br><span class="line">shutdown -r 10 <span class="comment">#过10分钟自动重启(root用户使用) </span></span><br><span class="line">shutdown -r 23:59 <span class="comment">#在时间为23:59时候重启(root用户使用)</span></span><br><span class="line"><span class="comment">#如果是通过shutdown命令设置重启的话，可以用shutdown -c命令取消重启</span></span><br></pre></td></tr></table></figure></p><p>关机命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">halt <span class="comment">#立刻关机</span></span><br><span class="line">poweroff <span class="comment">#立刻关机</span></span><br><span class="line">shutdown -h now <span class="comment">#立刻关机(root用户使用)</span></span><br><span class="line">shutdown -h 10 <span class="comment">#10分钟后自动关机</span></span><br><span class="line"><span class="comment">#如果是通过shutdown命令设置关机的话，可以用shutdown -c命令取消重启</span></span><br></pre></td></tr></table></figure></p><h3 id="清理命令"><a href="#清理命令" class="headerlink" title="清理命令"></a>清理命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum autoclean</span><br><span class="line">sudo yum clean</span><br><span class="line">sudo yum autoremove</span><br></pre></td></tr></table></figure><p>这三个命令主要清理升级缓存以及无用包的。</p><h3 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ls [选项] [文件/目录]</span><br><span class="line">   -a 显示所有文件，包括隐藏信息</span><br><span class="line">   -l 显示详细信息</span><br><span class="line">   -d 查看目录属性</span><br><span class="line">   -h 人性化显示文件大小</span><br><span class="line">   -i 显示inode</span><br></pre></td></tr></table></figure><p>扩展：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ls -lh 文件权限解读</span></span><br><span class="line">-rw-r--r--. 1 root root 7.5K 11月  9 15:45 install.log</span><br><span class="line"><span class="comment"># - 文件类型</span></span><br><span class="line"><span class="comment"># rw- 所有者权限</span></span><br><span class="line"><span class="comment"># r-- 所属组权限</span></span><br><span class="line"><span class="comment"># r-- 其他人权限</span></span><br><span class="line"><span class="comment"># . 代表ACL权限</span></span><br><span class="line"><span class="comment"># 1 引用计数</span></span><br><span class="line"><span class="comment"># root 所有者</span></span><br><span class="line"><span class="comment"># root 所有组</span></span><br><span class="line"><span class="comment"># r 读 / w 写 / x 执行</span></span><br></pre></td></tr></table></figure></p><h3 id="目录处理命令"><a href="#目录处理命令" class="headerlink" title="目录处理命令"></a>目录处理命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建立目录</span></span><br><span class="line">mkdir [选项] [目录]</span><br><span class="line">      -p 递归处理</span><br><span class="line"><span class="comment"># mkdir -p blog/css</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换目录(tab键可以识别目录补全)</span></span><br><span class="line"><span class="built_in">cd</span> [目录]</span><br><span class="line">   ~  进入用户主目录</span><br><span class="line">   -  进入上次所在目录</span><br><span class="line">   .. 进入上级目录</span><br><span class="line">   .  进入当前目录</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前所在目录</span></span><br><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><p><strong>未完待续…</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;网络配置&quot;&gt;&lt;a href=&quot;#网络配置&quot; class=&quot;headerlink&quot; title=&quot;网络配置&quot;&gt;&lt;/a&gt;网络配置&lt;/h3&gt;&lt;p&gt;在安装minimal版系统之后Centos系统的网卡默认是没有被开启的，我们可以用下面的命令编辑网络配置:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vi /etc/sysconfig/network-scripts/ifcfg-eth0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果使用DHCP则需要按以下格式设置：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DEVICE=eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HWADDR=08:00:27:0F:5C:17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TYPE=Ethernet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UUID=64ea57af-9329-40c4-90da-bf239cecea4f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ONBOOT=yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NM_CONTROLLED=yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BOOTPROTO=dhcp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果是固定IP则需要按以下格式设置：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DEVICE=eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HWADDR=08:00:27:0F:5C:17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TYPE=Ethernet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UUID=64ea57af-9329-40c4-90da-bf239cecea4f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ONBOOT=yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NM_CONTROLLED=yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BOOTPROTO=static&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IPADDR=192.168.0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NETMASK=255.255.255.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GATEWAY=192.168.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DNS1=61.128.128.68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DNS2=61.128.128.69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IPV6INIT=no&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;设置完成后需要运行以下命令重启网络服务：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;service network restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后可以用以下命令来查看IP地址：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ifconfig&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Centos" scheme="http://www.jakehu.me/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>《清平乐·红笺小字》</title>
    <link href="http://www.jakehu.me/2015/Yanshu-Hongjianxiaozi/"/>
    <id>http://www.jakehu.me/2015/Yanshu-Hongjianxiaozi/</id>
    <published>2015-11-19T16:00:00.000Z</published>
    <updated>2018-11-26T06:38:43.036Z</updated>
    
    <content type="html"><![CDATA[<p>这是一首念远怀人的爱情词，是晏殊[艳情]词的代表作之一。运用[雁足传书]和[鱼传尺素]的典故，又化用了崔护《题都城南庄》[人面不知何处去，桃花依旧笑春风]的诗句。</p><p><img src="/uploads/2015/Yanshu-Hongjianxiaozi/20151120132820.jpg"></p><p>红笺小字，说尽平生意。</p><p>鸿雁在云鱼在水，惆怅此情难寄！</p><p>斜阳独倚西楼，遥山恰对帘钩。</p><p>人面不知何处，绿波依旧东流。</p><hr><p>锦书难寄，相思难至</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是一首念远怀人的爱情词，是晏殊[艳情]词的代表作之一。运用[雁足传书]和[鱼传尺素]的典故，又化用了崔护《题都城南庄》[人面不知何处去，桃花依旧笑春风]的诗句。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/uploads/2015/Yanshu-Hongjianxiaozi/20
      
    
    </summary>
    
      <category term="一人一词" scheme="http://www.jakehu.me/categories/%E4%B8%80%E4%BA%BA%E4%B8%80%E8%AF%8D/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP Developers and Use Sublime Text,Look here！</title>
    <link href="http://www.jakehu.me/2015/Sublime-Text-PHPer/"/>
    <id>http://www.jakehu.me/2015/Sublime-Text-PHPer/</id>
    <published>2015-11-16T16:00:00.000Z</published>
    <updated>2018-11-26T06:38:43.036Z</updated>
    
    <content type="html"><![CDATA[<p>昨天写了一篇介绍<code>Sublime Text</code>插件的文章《<a href="http://www.jakehu.me/2015/Sublime-Text-Package/">带你在Sublime Text的世界里装逼 and 飞！</a>》，今天我们再来谈一谈一个PHP的开发者如何利用<code>Sublime Text</code>为自己搭建一个不错的<code>IDE</code>环境；话不多说开始吧！</p><p><a href="https://github.com/erichard/SublimePHPCompanion" target="_blank" rel="noopener"><strong>Sublime PHP Companion</strong></a><br>这是一个非常棒的插件，但是安装好了之后要小小的设置一哈快捷键。在菜单栏找到下面的快捷键设置文件<strong>Preferences &gt; Key Bindings - User</strong>。快捷键的设置请参考<a href="https://github.com/erichard/SublimePHPCompanion/blob/master/messages/1.0.0.txt" target="_blank" rel="noopener"><strong>PHP Companion Setting</strong></a>。<br><strong>find_use(F5)</strong>：当你的光标在这个类名上能快速的导入使用的类<br><img src="/uploads/2015/Sublime-Text-PHPer/php-companion-use.gif" alt=""><br><strong>expand_fqcn(F6)</strong>：当你的光标在这个类名上能快速的内联使用的类<br><img src="/uploads/2015/Sublime-Text-PHPer/php-companion-use-inline.gif" alt=""><br>就是这么的牛逼，这么的叼，当然上面只是一个示例，更多的功能自己折腾去吧！</p><a id="more"></a><p><a href="https://github.com/alienhard/SublimeAllAutocomplete" target="_blank" rel="noopener"><strong>Sublime AllAutocomplete</strong></a><br>他的功能是自动补全在已打开文件中定义的类，就像下图。这个功能怎么说呢？感觉有点鸡肋，但还是很有用处！<br><img src="/uploads/2015/Sublime-Text-PHPer/allautocomplete.gif" alt=""></p><p><strong>未完待续…</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天写了一篇介绍&lt;code&gt;Sublime Text&lt;/code&gt;插件的文章《&lt;a href=&quot;http://www.jakehu.me/2015/Sublime-Text-Package/&quot;&gt;带你在Sublime Text的世界里装逼 and 飞！&lt;/a&gt;》，今天我们再来谈一谈一个PHP的开发者如何利用&lt;code&gt;Sublime Text&lt;/code&gt;为自己搭建一个不错的&lt;code&gt;IDE&lt;/code&gt;环境；话不多说开始吧！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/erichard/SublimePHPCompanion&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Sublime PHP Companion&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;这是一个非常棒的插件，但是安装好了之后要小小的设置一哈快捷键。在菜单栏找到下面的快捷键设置文件&lt;strong&gt;Preferences &amp;gt; Key Bindings - User&lt;/strong&gt;。快捷键的设置请参考&lt;a href=&quot;https://github.com/erichard/SublimePHPCompanion/blob/master/messages/1.0.0.txt&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;PHP Companion Setting&lt;/strong&gt;&lt;/a&gt;。&lt;br&gt;&lt;strong&gt;find_use(F5)&lt;/strong&gt;：当你的光标在这个类名上能快速的导入使用的类&lt;br&gt;&lt;img src=&quot;/uploads/2015/Sublime-Text-PHPer/php-companion-use.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;strong&gt;expand_fqcn(F6)&lt;/strong&gt;：当你的光标在这个类名上能快速的内联使用的类&lt;br&gt;&lt;img src=&quot;/uploads/2015/Sublime-Text-PHPer/php-companion-use-inline.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;就是这么的牛逼，这么的叼，当然上面只是一个示例，更多的功能自己折腾去吧！&lt;/p&gt;
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Sublime Text" scheme="http://www.jakehu.me/tags/Sublime-Text/"/>
    
      <category term="PHP" scheme="http://www.jakehu.me/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>带你在Sublime Text的世界里装逼 and 飞！</title>
    <link href="http://www.jakehu.me/2015/Sublime-Text-Package/"/>
    <id>http://www.jakehu.me/2015/Sublime-Text-Package/</id>
    <published>2015-11-09T16:00:00.000Z</published>
    <updated>2018-11-26T06:38:43.036Z</updated>
    
    <content type="html"><![CDATA[<p>Sublime Text是什么，用来干什么就不用我说了哈！</p><p>这货的官网是<a href="http://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text</a>；然并卵，这不是我们要介绍的重点。介绍哈Sublime Text的插件管理<a href="https://packagecontrol.io/" target="_blank" rel="noopener">Package Control</a>,Package Control是Sublime Text的插件管理平台，我想应该是类似于PHP的Composer吧！好吧，其实我也不知道。哈哈</p><p>看这货就长这熊样：<br><img src="/uploads/2015/Sublime-Text-Package/20151103141134.png"><br>我们来介绍哈怎么在Sublime Text中安装Package Control，Sublime Text2和Sublime Text3分别有不同的安装方式。</p><p>首先：我们可以在菜单栏<strong>View-&gt;Show Console</strong>打开Console，或者是<strong>Ctrl+`</strong>打开Console。<br><a id="more"></a><br>Sublime Text2请在Console中输入以下代码安装Package Control<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib2,<span class="built_in">os</span>,hashlib; h = <span class="string">'2915d1851351e5ee549c20394736b442'</span> + <span class="string">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); <span class="built_in">os</span>.makedirs( ipp ) <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">os</span>.<span class="built_in">path</span>.exists(ipp) <span class="keyword">else</span> None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).<span class="built_in">read</span>(); dh = hashlib.sha256(by).hexdigest(); <span class="built_in">open</span>( <span class="built_in">os</span>.<span class="built_in">path</span>.join( ipp, pf), <span class="string">'wb'</span> ).<span class="built_in">write</span>(by) <span class="keyword">if</span> dh == h <span class="keyword">else</span> None; <span class="built_in">print</span>(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="string">'Please restart Sublime Text to finish installation'</span>)</span><br></pre></td></tr></table></figure></p><p>Sublime Text3请在Console中输入以下代码安装Package Control<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request,os,hashlib; h = <span class="string">'2915d1851351e5ee549c20394736b442'</span> + <span class="string">'8bc59f460fa1548d1514676163dafc88'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); <span class="keyword">by</span> = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.<span class="built_in">replace</span>(<span class="string">' '</span>, <span class="string">'%20'</span>)).<span class="built_in">read</span>(); dh = hashlib.sha256(<span class="keyword">by</span>).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="built_in">open</span>(os.path.join( ipp, pf), <span class="string">'wb'</span> ).<span class="built_in">write</span>(<span class="keyword">by</span>)</span><br></pre></td></tr></table></figure></p><p>Package Control就安装好了，至于Sublime Text的快捷方式什么的在这里也不说了，因为实在是<strong>太多了</strong>；好吧，我承认其实就是我懒。</p><p>重点介绍哈使用得比较顺手的几个插件，仅仅是我使用得顺手的。Sublime Text插件太多有待自己的探索。</p><p><strong>Ctrl+Shift+p</strong>(就是因为这个功能爱上了Sublime Text，太好用了！)打开控制台，输入并选择<code>Install Package</code>然后就可以开始安装插件了！</p><p><strong>Emmet</strong><br>不得不用的一款前端开发方面的插件，Write less , show more.安装后可直接使用，Tab键触发，Alt+Shift+W是个代码机器</p><p><strong>Alignment</strong><br>代码对齐，写几个变量，选中这几行，Ctrl+Alt+A，哇，齐了</p><p><strong>Prefixr</strong><br>写 CSS可自动添加 -webkit 等私有词缀，Ctrl+Alt+X触发</p><p><strong>Tag</strong><br>Html格式化，右键Auto-Format Tags on Ducument</p><p><strong>JS Format</strong><br>一个JS代码格式化插件</p><p><strong>sublimeCodeIntel</strong><br>代码提示插件，支持的语言包括：PHP, Python, RHTML, JavaScript, Smarty, Mason, Node.js, XBL, Tcl, HTML, HTML5, TemplateToolkit, XUL, Django, Perl, Ruby, Python3</p><p><strong>Sublimerge Pro</strong><br>文件对比插件</p><p><strong>MarkdownEditing</strong><br>这个我不想多说，因为此刻我正在用这个插件写这篇文章</p><p><strong>Markdown Preview</strong><br>这玩意儿你只需要轻轻的<code>Ctrl+B</code>就能吧.md文件转换为.html文件</p><p><strong>Sublime​Linter-php</strong><br>一个支持lint语法的插件，ctrl+alt+l呼出(与qq的锁定冲突，自己去改热键吧)可以高亮linter认为有错误的代码行</p><p><strong>sublime-jsdocs(DocBlockr)</strong><br>自动注释，完全符合jsdoc标准，按/**即可，再也不用为注释烦恼啦,设置及配置参考<br><a href="https://github.com/spadgos/sublime-jsdocs" target="_blank" rel="noopener">https://github.com/spadgos/sublime-jsdocs</a></p><p><strong>Pretty JSON</strong><br>JSON美化扩展</p><p><strong>Color​Picker</strong><br>跨平台取色器插件</p><p><strong>jQuery</strong><br>用jquery的同学不容错过啊，写完后按tab键，有惊喜</p><p><strong>Clipboard History</strong><br>剪贴板历史记录，显示更多历史复制，Ctrl+Shift+V触发</p><p><strong>SideBarEnhancements</strong><br>侧栏右键功能增强，非常实用</p><p><strong>BracketHighlighter</strong><br>Bracket​Highlighter是一个括号、引号、标签高亮插件，支持[]、()、{}、””、’’和 等，比Sublime Text自带的高亮要明显得多</p><p><strong>Theme–Soda</strong><br>完美的编码主题，用过的都说好，Setting user里面添加”theme”: “Soda Dark.sublime-theme”</p><p><strong>GBK to UTF8</strong><br>将文件编码从GBK转黄成UTF8，菜单-File里面找</p><p><strong>SFTP</strong><br>直接编辑 FTP 或 SFTP 服务器上的文件，绝对FTP浮云</p><p><strong>WordPress</strong><br>集成一些WordPress的函数，对于像我这种经常要写WP模版和插件的人特别有用</p><p><strong>PHPTidy</strong><br>整理排版PHP代码</p><p><strong>YUI Compressor</strong><br>压缩JS和CSS文件</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sublime Text是什么，用来干什么就不用我说了哈！&lt;/p&gt;
&lt;p&gt;这货的官网是&lt;a href=&quot;http://www.sublimetext.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Sublime Text&lt;/a&gt;；然并卵，这不是我们要介绍的重点。介绍哈Sublime Text的插件管理&lt;a href=&quot;https://packagecontrol.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Package Control&lt;/a&gt;,Package Control是Sublime Text的插件管理平台，我想应该是类似于PHP的Composer吧！好吧，其实我也不知道。哈哈&lt;/p&gt;
&lt;p&gt;看这货就长这熊样：&lt;br&gt;&lt;img src=&quot;/uploads/2015/Sublime-Text-Package/20151103141134.png&quot;&gt;&lt;br&gt;我们来介绍哈怎么在Sublime Text中安装Package Control，Sublime Text2和Sublime Text3分别有不同的安装方式。&lt;/p&gt;
&lt;p&gt;首先：我们可以在菜单栏&lt;strong&gt;View-&amp;gt;Show Console&lt;/strong&gt;打开Console，或者是&lt;strong&gt;Ctrl+`&lt;/strong&gt;打开Console。&lt;br&gt;
    
    </summary>
    
      <category term="技术渣" scheme="http://www.jakehu.me/categories/%E6%8A%80%E6%9C%AF%E6%B8%A3/"/>
    
    
      <category term="Sublime Text" scheme="http://www.jakehu.me/tags/Sublime-Text/"/>
    
      <category term="packagecontrol" scheme="http://www.jakehu.me/tags/packagecontrol/"/>
    
  </entry>
  
  <entry>
    <title>《诗经·国风·郑风·溱洧》</title>
    <link href="http://www.jakehu.me/2015/Shijing-Zhenwei/"/>
    <id>http://www.jakehu.me/2015/Shijing-Zhenwei/</id>
    <published>2015-10-30T16:00:00.000Z</published>
    <updated>2018-11-26T06:38:43.036Z</updated>
    
    <content type="html"><![CDATA[<p>溱水流，洧水淌，两条河水哗哗奔流。小伙子和大姑娘，手中兰花散发着芳香。妹说：“咱们一块儿去看热闹吧?”哥说：“我已经去过一趟了。”姑娘说：“再陪我去一趟也无妨!”洧水外，河岸边，地方宽敞，人儿喜洋洋，男女相伴，有说有笑，心花怒放。送支芍药花，以表真挚的情意。<br><img src="/uploads/2015/Shijing-Zhenwei/20151031122000.jpg"><br>溱与洧，方涣涣兮。士与女，方秉蕳兮。女曰观乎？士曰既且。且往观乎？洧之外，洵訏且乐。维士与女，伊其相谑，赠之以勺药。<br>溱与洧，浏其清矣。士与女，殷其盈矣。女曰观乎？士曰既且。且往观乎？洧之外，洵訏且乐。维士与女，伊其将谑，赠之以勺药。</p><hr><p>维士与女，伊其将谑，赠之以勺药。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;溱水流，洧水淌，两条河水哗哗奔流。小伙子和大姑娘，手中兰花散发着芳香。妹说：“咱们一块儿去看热闹吧?”哥说：“我已经去过一趟了。”姑娘说：“再陪我去一趟也无妨!”洧水外，河岸边，地方宽敞，人儿喜洋洋，男女相伴，有说有笑，心花怒放。送支芍药花，以表真挚的情意。&lt;br&gt;&lt;img
      
    
    </summary>
    
      <category term="在水一方" scheme="http://www.jakehu.me/categories/%E5%9C%A8%E6%B0%B4%E4%B8%80%E6%96%B9/"/>
    
    
  </entry>
  
</feed>
