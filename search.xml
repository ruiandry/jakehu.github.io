<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Mybatis-Plus注解方式自定义分页实现]]></title>
    <url>%2F2018%2Fmybatis-plus-page%2F</url>
    <content type="text"><![CDATA[前记毫无疑问，Mybatis-Plus是优秀的。在Mybatis-Plus官网的文档中，自定义分页只能只支持xml方式，但是鉴于本人对xml并不是太喜欢，而是喜欢用注解的方式。 于是，记录了在Mybatis-Plus中注解分页方式实现。 实现首先讲一下我的请求：1controller-&gt;service-&gt;mapper-&gt;entity UserService.java12345678910public Object getAll() &#123; Page userList = new Page&lt;&gt;(1, 5); Map&lt;String, Object&gt; param = new HashMap&lt;&gt;(); param.put("name", "测试788"); param.put("page", userList); List&lt;Map&lt;String, Object&gt;&gt; userListArr = mapper.getAllUserGoodsSQLPage(param); userList.setRecords(userListArr); return userList;&#125; UserMapper.java123456789@Select("&lt;script&gt;SELECT u.id,u.name from " + TABLE + " as u " + "left join " + G_TABLE + " as g " + "on u.id = g.uid " + "where u.name = #&#123;name&#125;" + "&lt;if test = 'id != null'&gt;" + " and u.id = #&#123;id&#125;" + "&lt;/if&gt;" + "&lt;/script&gt;")List&lt;Map&lt;String, Object&gt;&gt; getAllUserGoodsSQLPage(Map&lt;String, Object&gt; param);]]></content>
      <categories>
        <category>技术渣</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
        <tag>Mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记Mysql部分用法]]></title>
    <url>%2F2018%2Fmysql-usage%2F</url>
    <content type="text"><![CDATA[JSON1、查询数组中对象 JSON_CONTAINS 用法 12345select * from circulationwhere JSON_CONTAINS(goods-&gt;'$[*].name', '["海带结（香辣味）150克/袋"]', '$')select * from circulationwhere JSON_CONTAINS(goods-&gt;'$[*].gid', '[20]', '$') 2、Json字符串转化为Json对象 CONVERT 用法 1select CONVERT('&#123;"mail": "amy@gmail.com", "name": "Amy"&#125;',JSON) 3、元素转化为数组 JSON_ARRAY 用法 1SELECT JSON_ARRAY(1, "abc", NULL, TRUE, CURTIME()) 常规1、查询重复记录12select * from merchantwhere num in (select num from synk.merchant group by num having count(num) &gt; 1)]]></content>
      <categories>
        <category>技术渣</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记Gitlab到Docker全过程CI/CD]]></title>
    <url>%2F2018%2Fgitlab-docker%2F</url>
    <content type="text"><![CDATA[前记很久都没有写博客了，不是没时间，可能就是纯粹的懒吧。 背景公司内部版本管理一直以来都是用的Gitlab，而系统早在前年的时候就已经全部上了Docker，gitlab-runner发布过后就一直想利用gitlab-runner进行CI/CD自动化的部署。 Gitlab &amp;&amp; Gitlab-Runner基于原生原方案关于gitlab &amp;&amp; gitlab-runner的安装我这边就不赘述了，不会的可以看官方的文档。 Gitlab Runner的安装和注册 我们在物理机或云上部署的时候一个流程图如下： 从上图我们可以看出，当我们的服务器多了之后每个服务器都需要安装runner服务，这对于我这样懒的人感觉好麻烦的；受不了。 当然也有可以解决的方案，如：单独用一服务器挂载共享磁盘。 基于Docker新方案今天我们重点来谈谈，gitlab如何和docker完美结合 先看看看架构图，如下： 接下来我们来说明一哈上面这张图的一个工作流程。 1、开发人员通过本地push代码到gitlab上2、gitlab-runner会根据代码根目录下的gitlab-ci.yml文件执行CI，gitlab-ci.yml使用说明请移步：gitlab-ci使用说明。3、在CI过程中会去读取你在代码下Dockerfile文件构建镜像。docker的使用我们这里不做过多赘述4、将镜像推送到镜像仓库，可以自建，也可以用像阿里云的仓库5、docker拉去镜像对服务进行部署。]]></content>
      <categories>
        <category>技术渣</category>
      </categories>
      <tags>
        <tag>Gitlab</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《诗经·国风·陈风·宛丘》]]></title>
    <url>%2F2016%2FShijing-Wanqiu%2F</url>
    <content type="text"><![CDATA[你飘飘荡荡，轻歌曼舞在宛丘之上，是多么令人神往啊。我想着你爱着你，确实有着深深的感情啊，可是只是一厢情愿而没有什么希望啊! 冬冬冬冬，鼓声响了，那是你在宛丘之下唱歌跳舞。你手持鹭毛伞一年到头歌舞不停，不管是寒冷的冬天还是炎热的盛夏。 乒乒乓乓，瓦盆响了，那是你在宛丘道上跳舞歌唱。你手持鹭毛伞一年到头歌舞不停，不管是寒冷的冬天还是炎热的盛夏。子之汤兮，宛丘之上兮。洵有情兮，而无望兮。坎其击鼓，宛丘之下。无冬无夏，值其鹭羽。坎其击缶，宛丘之道。无冬无夏，值其鹭翿。 既见君子，云胡不喜]]></content>
      <categories>
        <category>在水一方</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu下必不可少的编程字体Consolas]]></title>
    <url>%2F2015%2FUbuntu-Consolas%2F</url>
    <content type="text"><![CDATA[Consolas是一套等宽的字体，属无衬线字体，由Lucas de Groot设计。这个字体使用了微软的ClearType 字型平滑技术，并随同Windows Vista、Office 2007及Microsoft Visual Studio中发行，或可在微软的网站下载。 不说了上面的都是废话，哈哈。 下载YaHei.Consolas 安装将上面下载的字体包解压，并按如下操作：12345sudo mkdir -p /usr/share/fonts/consolassudo cp YaHei.Consolas.1.12.ttf /usr/share/fonts/consolas/sudo chmod 644 /usr/share/fonts/consolas/YaHei.Consolas.1.12.ttfcd /usr/share/fonts/consolassudo mkfontscale &amp;&amp; sudo mkfontdir &amp;&amp; sudo fc-cache -fv 题外话在这里再给两款编程常用的字体：(个人爱好罢了)Monaco：https://github.com/cstrap/monaco-font1curl -kL https://raw.github.com/cstrap/monaco-font/master/install-font-ubuntu.sh | bash Source Code Pro：https://github.com/adobe-fonts/source-code-pro123sudo mkdir -p /usr/share/fonts/adobe-fonts/source-code-prosudo git clone https://github.com/adobe-fonts/source-code-pro.git /usr/share/fonts/adobe-fonts/source-code-prosudo fc-cache -f -v /usr/share/fonts/adobe-fonts/source-code-pro 提笔为青春，人生正当年]]></content>
      <categories>
        <category>技术渣</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Consolas</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu下利用proxychains高大上的安装Dropbox]]></title>
    <url>%2F2015%2FUbuntu-Dropbox%2F</url>
    <content type="text"><![CDATA[对Ubuntu的折腾也有几年了吧，但是一直都是双系统或是虚拟机，最近将windows彻底的抛弃了。接下来说我们今天的主角Dropbox，一直以来都是利用Dropbox进行资料同步。转入Ubuntu也不例外，在安装的时候由于Dropbox已经被墙了所以想到了走代理。 Shadowsocks这里也就不多说了，Shadowsocks-Qt5。 proxychains在使用3版本中的时候遇到了一些问题，所以我建议直接使用4版本。123456789101112# 安装git clone https://github.com/rofl0r/proxychains-ng.git./configure --prefix=/usr --sysconfdir=/etcmakesudo make installsudo make install-config# 配置 socks4 127.0.0.1 9050改为socks5 127.0.0.1 1080vi /usr/local/etc/proxychains.conf# 使用proxychains4 telnet google.com 80 Dropbox1proxychains4 dropbox start -i Dropbox启动后就会自动下载并安装，登录过后可以通过配置选项走代理。 题外话：解决Ubuntu下Sublime Text 3无法输入中文]]></content>
      <categories>
        <category>技术渣</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Dropbox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mark在学习和使用Centos时那些常用的命令/概念]]></title>
    <url>%2F2015%2FCentos-Command%2F</url>
    <content type="text"><![CDATA[网络配置在安装minimal版系统之后Centos系统的网卡默认是没有被开启的，我们可以用下面的命令编辑网络配置:1vi /etc/sysconfig/network-scripts/ifcfg-eth0 如果使用DHCP则需要按以下格式设置：1234567DEVICE=eth0HWADDR=08:00:27:0F:5C:17TYPE=EthernetUUID=64ea57af-9329-40c4-90da-bf239cecea4fONBOOT=yesNM_CONTROLLED=yesBOOTPROTO=dhcp 如果是固定IP则需要按以下格式设置：12345678910111213DEVICE=eth0HWADDR=08:00:27:0F:5C:17TYPE=EthernetUUID=64ea57af-9329-40c4-90da-bf239cecea4fONBOOT=yesNM_CONTROLLED=yesBOOTPROTO=staticIPADDR=192.168.0.2NETMASK=255.255.255.0GATEWAY=192.168.0.1DNS1=61.128.128.68DNS2=61.128.128.69IPV6INIT=no 设置完成后需要运行以下命令重启网络服务：1service network restart 最后可以用以下命令来查看IP地址：1ifconfig 重启/关机命令重启命令：12345rebootshutdown -r now #立刻重启(root用户使用)shutdown -r 10 #过10分钟自动重启(root用户使用) shutdown -r 23:59 #在时间为23:59时候重启(root用户使用)#如果是通过shutdown命令设置重启的话，可以用shutdown -c命令取消重启 关机命令：12345halt #立刻关机poweroff #立刻关机shutdown -h now #立刻关机(root用户使用)shutdown -h 10 #10分钟后自动关机#如果是通过shutdown命令设置关机的话，可以用shutdown -c命令取消重启 清理命令123sudo yum autocleansudo yum cleansudo yum autoremove 这三个命令主要清理升级缓存以及无用包的。 ls命令123456ls [选项] [文件/目录] -a 显示所有文件，包括隐藏信息 -l 显示详细信息 -d 查看目录属性 -h 人性化显示文件大小 -i 显示inode 扩展：1234567891011# ls -lh 文件权限解读-rw-r--r--. 1 root root 7.5K 11月 9 15:45 install.log# - 文件类型# rw- 所有者权限# r-- 所属组权限# r-- 其他人权限# . 代表ACL权限# 1 引用计数# root 所有者# root 所有组# r 读 / w 写 / x 执行 目录处理命令1234567891011121314# 建立目录mkdir [选项] [目录] -p 递归处理# mkdir -p blog/css# 切换目录(tab键可以识别目录补全)cd [目录] ~ 进入用户主目录 - 进入上次所在目录 .. 进入上级目录 . 进入当前目录# 显示当前所在目录pwd 未完待续…]]></content>
      <categories>
        <category>技术渣</category>
      </categories>
      <tags>
        <tag>Centos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《清平乐·红笺小字》]]></title>
    <url>%2F2015%2FYanshu-Hongjianxiaozi%2F</url>
    <content type="text"><![CDATA[这是一首念远怀人的爱情词，是晏殊[艳情]词的代表作之一。运用[雁足传书]和[鱼传尺素]的典故，又化用了崔护《题都城南庄》[人面不知何处去，桃花依旧笑春风]的诗句。 红笺小字，说尽平生意。 鸿雁在云鱼在水，惆怅此情难寄！ 斜阳独倚西楼，遥山恰对帘钩。 人面不知何处，绿波依旧东流。 锦书难寄，相思难至]]></content>
      <categories>
        <category>一人一词</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[PHP Developers and Use Sublime Text,Look here！]]></title>
    <url>%2F2015%2FSublime-Text-PHPer%2F</url>
    <content type="text"><![CDATA[昨天写了一篇介绍Sublime Text插件的文章《带你在Sublime Text的世界里装逼 and 飞！》，今天我们再来谈一谈一个PHP的开发者如何利用Sublime Text为自己搭建一个不错的IDE环境；话不多说开始吧！ Sublime PHP Companion这是一个非常棒的插件，但是安装好了之后要小小的设置一哈快捷键。在菜单栏找到下面的快捷键设置文件Preferences &gt; Key Bindings - User。快捷键的设置请参考PHP Companion Setting。find_use(F5)：当你的光标在这个类名上能快速的导入使用的类expand_fqcn(F6)：当你的光标在这个类名上能快速的内联使用的类就是这么的牛逼，这么的叼，当然上面只是一个示例，更多的功能自己折腾去吧！ Sublime AllAutocomplete他的功能是自动补全在已打开文件中定义的类，就像下图。这个功能怎么说呢？感觉有点鸡肋，但还是很有用处！ 未完待续…]]></content>
      <categories>
        <category>技术渣</category>
      </categories>
      <tags>
        <tag>Sublime Text</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[带你在Sublime Text的世界里装逼 and 飞！]]></title>
    <url>%2F2015%2FSublime-Text-Package%2F</url>
    <content type="text"><![CDATA[Sublime Text是什么，用来干什么就不用我说了哈！ 这货的官网是Sublime Text；然并卵，这不是我们要介绍的重点。介绍哈Sublime Text的插件管理Package Control,Package Control是Sublime Text的插件管理平台，我想应该是类似于PHP的Composer吧！好吧，其实我也不知道。哈哈 看这货就长这熊样：我们来介绍哈怎么在Sublime Text中安装Package Control，Sublime Text2和Sublime Text3分别有不同的安装方式。 首先：我们可以在菜单栏View-&gt;Show Console打开Console，或者是Ctrl+`打开Console。Sublime Text2请在Console中输入以下代码安装Package Control1import urllib2,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation') Sublime Text3请在Console中输入以下代码安装Package Control1import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) Package Control就安装好了，至于Sublime Text的快捷方式什么的在这里也不说了，因为实在是太多了；好吧，我承认其实就是我懒。 重点介绍哈使用得比较顺手的几个插件，仅仅是我使用得顺手的。Sublime Text插件太多有待自己的探索。 Ctrl+Shift+p(就是因为这个功能爱上了Sublime Text，太好用了！)打开控制台，输入并选择Install Package然后就可以开始安装插件了！ Emmet不得不用的一款前端开发方面的插件，Write less , show more.安装后可直接使用，Tab键触发，Alt+Shift+W是个代码机器 Alignment代码对齐，写几个变量，选中这几行，Ctrl+Alt+A，哇，齐了 Prefixr写 CSS可自动添加 -webkit 等私有词缀，Ctrl+Alt+X触发 TagHtml格式化，右键Auto-Format Tags on Ducument JS Format一个JS代码格式化插件 sublimeCodeIntel代码提示插件，支持的语言包括：PHP, Python, RHTML, JavaScript, Smarty, Mason, Node.js, XBL, Tcl, HTML, HTML5, TemplateToolkit, XUL, Django, Perl, Ruby, Python3 Sublimerge Pro文件对比插件 MarkdownEditing这个我不想多说，因为此刻我正在用这个插件写这篇文章 Markdown Preview这玩意儿你只需要轻轻的Ctrl+B就能吧.md文件转换为.html文件 Sublime​Linter-php一个支持lint语法的插件，ctrl+alt+l呼出(与qq的锁定冲突，自己去改热键吧)可以高亮linter认为有错误的代码行 sublime-jsdocs(DocBlockr)自动注释，完全符合jsdoc标准，按/**即可，再也不用为注释烦恼啦,设置及配置参考https://github.com/spadgos/sublime-jsdocs Pretty JSONJSON美化扩展 Color​Picker跨平台取色器插件 jQuery用jquery的同学不容错过啊，写完后按tab键，有惊喜 Clipboard History剪贴板历史记录，显示更多历史复制，Ctrl+Shift+V触发 SideBarEnhancements侧栏右键功能增强，非常实用 BracketHighlighterBracket​Highlighter是一个括号、引号、标签高亮插件，支持[]、()、{}、””、’’和 等，比Sublime Text自带的高亮要明显得多 Theme–Soda完美的编码主题，用过的都说好，Setting user里面添加”theme”: “Soda Dark.sublime-theme” GBK to UTF8将文件编码从GBK转黄成UTF8，菜单-File里面找 SFTP直接编辑 FTP 或 SFTP 服务器上的文件，绝对FTP浮云 WordPress集成一些WordPress的函数，对于像我这种经常要写WP模版和插件的人特别有用 PHPTidy整理排版PHP代码 YUI Compressor压缩JS和CSS文件]]></content>
      <categories>
        <category>技术渣</category>
      </categories>
      <tags>
        <tag>Sublime Text</tag>
        <tag>packagecontrol</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《诗经·国风·郑风·溱洧》]]></title>
    <url>%2F2015%2FShijing-Zhenwei%2F</url>
    <content type="text"><![CDATA[溱水流，洧水淌，两条河水哗哗奔流。小伙子和大姑娘，手中兰花散发着芳香。妹说：“咱们一块儿去看热闹吧?”哥说：“我已经去过一趟了。”姑娘说：“再陪我去一趟也无妨!”洧水外，河岸边，地方宽敞，人儿喜洋洋，男女相伴，有说有笑，心花怒放。送支芍药花，以表真挚的情意。溱与洧，方涣涣兮。士与女，方秉蕳兮。女曰观乎？士曰既且。且往观乎？洧之外，洵訏且乐。维士与女，伊其相谑，赠之以勺药。溱与洧，浏其清矣。士与女，殷其盈矣。女曰观乎？士曰既且。且往观乎？洧之外，洵訏且乐。维士与女，伊其将谑，赠之以勺药。 维士与女，伊其将谑，赠之以勺药。]]></content>
      <categories>
        <category>在水一方</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[论如何解决在Windows下使用Composer时出现的这些问题]]></title>
    <url>%2F2015%2FWindows-Composer-Error%2F</url>
    <content type="text"><![CDATA[问题一：123Fatal error: Call to undefined method Composer\Package\CompletePackage::getTransportOptions() in C:\Users\idiot\AppData\Roaming\Composer\vendor\fxp\composer-asset-plugin\Package\AbstractLazyCompletePackage.php on line 184 解决办法：下载最新的 composer.pharhttps://getcomposer.org/download/ 问题二：1234567Could not fetch https://api.github.com/repos/jquery/jquery, enter your GitHub credentials to go over the API rate limitThe credentials will be swapped for an OAuth token stored in C:/Users/idiot/AppData/Roaming/Composer/auth.json, your password will not be storedTo revoke access to this token you can visit https://github.com/settings/applicationsUsername: 解决办法：1、更新Composer到最新版本1php composer.phar self-update 2、登录到Github https://github.com/settings/applications “generated a token”增加一个新的Token3、运行1php composer.phar config -g github-oauth.github.com token]]></content>
      <categories>
        <category>技术渣</category>
      </categories>
      <tags>
        <tag>Composer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《诗经·小雅· 采薇》]]></title>
    <url>%2F2015%2FShijing-Caiwei%2F</url>
    <content type="text"><![CDATA[寒冬，阴雨霏霏，雪花纷纷，一位解甲退役的征夫在返乡途中踽踽独行。道路崎岖，又饥又渴；但边关渐远，乡关渐近。此刻，他遥望家乡，抚今追昔，不禁思绪纷繁，百感交集。艰苦的军旅生活，激烈的战斗场面，无数次的登高望归情景，一幕幕在眼前重现。《采薇》，就是三千年前这样的一位久戍之卒，在归途中的追忆唱叹之作。采薇采薇，薇亦作止。曰归曰归，岁亦莫止。靡室靡家，𤞤狁之故。不遑启居，𤞤狁之故。采薇采薇，薇亦柔止。曰归曰归，心亦忧止。忧心烈烈，载饥载渴。我戍未定，靡使归聘。采薇采薇，薇亦刚止。曰归曰归，岁亦阳止。王事靡盬，不遑启处。忧心孔疚，我行不来！彼尔维何？维常之华。彼路斯何？君子之车。戎车既驾，四牡业业。岂敢定居？一月三捷。驾彼四牡，四牡骙骙。君子所依，小人所腓。四牡翼翼，象弭鱼服。岂不日戒？𤞤狁孔棘！昔我往矣，杨柳依依。今我来思，雨雪霏霏。行道迟迟，载渴载饥。我心伤悲，莫知我哀！ 我心伤悲，莫知我哀!]]></content>
      <categories>
        <category>在水一方</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[唉，找不到Windows下Memcached的php扩展还是自己在Linux上编译吧！]]></title>
    <url>%2F2015%2FLinux-install-php-extension%2F</url>
    <content type="text"><![CDATA[想在Windows上安装个Memcached的php扩展真是找了好多地方都没找到，Windows上自己编译起来也非常的麻烦。算了吧还是Linux方便，走你：Memcached扩展需要安装libmemcached，因为该扩展是依赖libmemcached的API。所以首先我们必须安装libmemcached：123456wget https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gztar zxvf libmemcached-1.0.18.tar.gzcd libmemcached-1.0.18./configuremakemake install 安装完成后我们可以发现libmemcached被安装在了1/usr/local/include/libmemcached 接下来找到php中Memcached扩展页面http://pecl.php.net/package/memcached并下载123wget http://pecl.php.net/get/memcached-2.2.0.tgztar xvzf memcached-2.2.0.tgzcd memcached-2.2.0 在编译之前我们要确认php-devel是否已经安装，如果没有安装请使用(Centos)1yum install php-devel 安装；如果已经安装好接下来我们就可以编译了。1234phpize./configure --with-php-config=/usr/local/php-5.6.4/bin/php-config --disable-memcached-saslmakemake test 然后我们可以在1/root/memcached-2.2.0/modules 目录下面找到 memcached.so,我们只需要将memcached.so移动到PHP环境所在的ext文件夹内然后再配置php.ini即可注：以上安装过程中出现以下错误可以按下面的解决办法解决123#configure: error: no, sasl.h is not available. Run configure with --disable-memcached-sasl to disable this check#如果出现上面错误则运行以下代码yum install cyrus-sasl-devel 最后我们用php代码进行测试，代码如下：12345$m = new Memcached();$arr = array(array('127.0.0.1',11211));$m-&gt;addServers($arr); //addServers可以同时添加多台服务器print_r($m-&gt;getStats()); //打印服务器状态print_r($m-&gt;getVersion()); //打印memcached版本号]]></content>
      <categories>
        <category>技术渣</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Memcached</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TP-Link 703N路由器刷Openwrt+Shadowsocks实现OpenWRT 路由器自动翻墙]]></title>
    <url>%2F2015%2FTP-Link-703N-Openwrt-Shadowsocks%2F</url>
    <content type="text"><![CDATA[说明：此篇文章是作者刷机过程中遇到的一些问题和解决方案，其中有自己的也有其他网友提供的一些方案；希望这篇文章能够帮助到大家。 一、前往Openwrt官网下载703n官方固件，我下载的是最新的版本。http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/ 二、进入原路由器（192.168.1.1）在【系统工具】-&gt;【软件升级】中升级刚才在Openwrt官网下载的固件。（1）首先用一根网线将703N的Lan口和你电脑相连，电脑上设置为DHCP模式。（2）然后运行cmd.exe，输入telnet 192.168.1.1成功后出现OpenWrt的欢迎界面。（3）输入passwd更改root密码后dropbear(SSH 服务)就运行了，输入exit退出telnet；以后就可以通过ssh管理OpenWrt。注：最新版默认已经安装和启用Luci管理界面，你可以直接通过访问192.168.1.1进入Luci Web管理界面。默认Luci管理界面是没有中文的，中文包安装如下：12opkg updateopkg install luci-i18n-chinese 安装好后可以前往WEB界面更改 三、因为703N的Flash只有4M，做完上述步骤之后就只有400KB左右了；于是我选择了在703N上面挂在了一个8G的U盘来扩展。（1）在Linux系统下将8G的U盘分为两个区，一个区2G为swap格式作为缓存区用，其他空间为ext4格式。（Linux系统下给U盘分区可以用GParted这款软件）（2）挂载U盘安装必须的包12opkg updateopkg install kmod-usb-storage block-mount kmod-fs-ext4 将U盘插上，执行”block info”命令，看下U盘是否已被识别，如下图，其中中sda1、sda2为U盘分区：安装完成以后,挂载u盘.如下命令将默认的系统盘转移到u盘中12345mount /dev/sda1 /mntmkdir /tmp/rootmount -o bind / /tmp/rootcp /tmp/root/* /mnt -aumount /tmp/root 修改 /etc/config/fstab 文件,让系统启动自动挂载,修改成如下1234567config mount option target /overlay option device /dev/sda1 option fstype ext4 option options rw,sync option enabled 1 option enabled_fsck 0 执行如下命令让其生效1/etc/init.d/fstab enable 设置并激活 swap 分区,修改 fstab 文件,激活1234mkswap /dev/sda2config swap option device /dev/sda2 option enabled 1 重启路由器，再次”df -h”一下，可以看到路由器的空间已经扩展成功了。 四、接下来我们就来安装Shadowsocks，这步已经有网友有成熟案例和教程了。我这里就不多说了，具体请前往：http://cokebar.info/archives/664按上面的教程设置好了就只能正常的使用和翻墙了。这里我也秀一张最后的成品]]></content>
      <categories>
        <category>技术渣</category>
      </categories>
      <tags>
        <tag>Openwrt</tag>
        <tag>Shadowsocks</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[世事无常，荣枯随缘，泰然处之]]></title>
    <url>%2F2015%2Flife-is-changeable%2F</url>
    <content type="text"><![CDATA[人生的境遇并没有绝对的好坏之别，佛说:物随心转,境由心造,烦恼皆心生。自性的清明、智慧，才是一切意念的本源。日月经年，世事无常；人生如月，盈亏有间。人生在世，难免有忠奸善恶，是非情仇，得失成败，荣辱浮沉。我们应当不逃避。不强求，一切随缘，任由世事变迁，宠辱皆不惊，以一颗恬然、淡定的心，泰然处之。 从前，山上有座古刹，里面住着师徒四人。一天，师父为考验弟子们的修行功夫，与他们一起来到寺庙前的两棵树前。 其中一棵尚未到秋天枝干就枯瘪了，叶子也凋零得差不多，恐怕早已病死了。另一棵则郁郁葱葱。深绿的叶子像涂了层蜡似的，在阳光下泛着耀眼的光泽，一副欣欣向荣的样子。 这时，师父发话了：“你们说说，这两棵树，是枯的好，还是荣的好？” 大徒弟抢着回答：“荣的好！” 二徒弟接着说：“枯的好！” 唯有天资聪颖的小徒弟沉思片刻，望着远方绵亘的山脉，缓缓地说：“枯也随它，荣也随它……” “春有百花秋有月，夏有凉风冬有雪。若无闲事挂心头，人间处处好时节。”人生的境遇并没有绝对的好坏之别，而常人眼里之所以有顺逆、褒贬等种种色彩，是缘于内心的染缸。境由心生，一切唯心造。由此可见，自性的清明、智慧，才是一切意念的本源。 日月经年，世事无常；人生如月，盈亏有间。人生在世，难免有忠奸善恶，是非情仇，得失成败，荣辱浮沉。我们应当不逃避。不强求，一切随缘，任由世事变迁，宠辱皆不惊，以一颗恬然、淡定的心，泰然处之。 世尊说，一个人如果有觉悟的人生，虽然睡卧草皮，也会觉得快乐。不懂得人生的人，就算跑到天堂去，也活得不开心。如怀有一颗智慧、明朗的心，洞察世事人情，透析宇宙、人生的真理，那么，一切的横逆苦厄都是圆满的，就日日是好日，夜夜是清宵……]]></content>
      <categories>
        <category>呱唧呱唧</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大美青海，大美中国]]></title>
    <url>%2F2015%2Fpicture-test%2F</url>
    <content type="text"><![CDATA[是大山就有高度和坡度，是江河就有宽度和深度，是人就存在不足和错误。]]></content>
      <categories>
        <category>呱唧呱唧</category>
      </categories>
      <tags>
        <tag>美图</tag>
        <tag>青海</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[说一说，那些年我们一起自建过的Git服务器]]></title>
    <url>%2F2015%2FGit-on-the-Server%2F</url>
    <content type="text"><![CDATA[Git服务器端搭建，基于ssh协议服务端架设空git repossh登录服务器1234567891011121314groupadd git #增加git用户组useradd jakehu -g git #增加名为jakehu的用户属于git用户组ln –s /gitwork /git #gitwork为实际工作目录，git为空目录做链接使用，可直接在根目录建立git文件夹即可#以下造作操作是以直接在根目录下建立git文件夹为前提chown jakehu.git /gitsu jakehucd ~cd /git#空库的目录权限设定为 组内读写#用--shared git会自动搞定创建起来的文件目录# shared 参数很重要git init --bare --shared test.git 到此为止服务器端架设完成 客户端生成密钥123cd ~ssh-keygen -b 2048 -t rsa #生成密钥#windows生成密钥方式不同,可用Pageant生成密钥 服务器端导入密钥12345su jakehucd ~cd .sshcat id_rsa_jakehu.pub &gt;&gt; authorized_keyschmod 600 authorized_keys 最后访问地址: ssh://jakehu@serverIP/git/test.git 题外话服务器上自动部署1234rootcd /www/ #网站目录sh git-deploy.sh#https://raw.githubusercontent.com/jakehu/tools/master/git-deploy.sh 服务器上切换分支测试1234rootcd /www/webgit checkout devchown -R www:www /www/web]]></content>
      <categories>
        <category>服务器</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你好Hexo，我来了！]]></title>
    <url>%2F2015%2Fhello-hexo%2F</url>
    <content type="text"><![CDATA[13年开始玩博客，最开始的时候还比较上心每天都去更新一两篇文章；也把自己的做的一些笔记分享在博客上。后来渐渐的也就失去了兴趣了，好吧，其实要把一件事变成一个习惯还是挺难的。再后来我发现wordpress越来越慢，把啥子Google的一些字体什么的都去掉之后还是很慢。其实也是wordpress都已经进行了这么多的迭代，所以我放弃了wordpress开始寻找他的代替品。 在放弃Wordpress之后我开始寻找一款极简的博客，我尝试过在IT界不少人推荐的Typecho，也试过Github官方推荐的jekyll,直到我看到Hexo；好吧，我承认我找到了我想要的。 当然在这里也要感谢iissnan为我们带来这么棒棒哒的主题。 就这样Hexo我来了，哈哈！ 广厦千间，夜眠仅需六尺；家财万贯，日食不过三餐。]]></content>
      <categories>
        <category>呱唧呱唧</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
      </tags>
  </entry>
</search>
